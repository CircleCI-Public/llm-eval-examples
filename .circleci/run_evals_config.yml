version: 2.1

orbs:
  evals: circleci/evals@1.0
  slack: circleci/slack@4.13.3

# PIPELINE PARAMETERS
parameters:
  run-braintrust-evals:
    type: boolean
    default: false
  run-langsmith-evals:
    type: boolean
    default: false
  run-custom-evals:
    type: boolean
    default: false

# EXECUTORS
executors:
  python:
    docker:
      - image: cimg/python:3.11

# COMMANDS
commands:
  notify_fail_slack:
    steps:
      - slack/notify:
          channel: llmops-service-notifications
          branch_pattern: main
          event: fail
          template: basic_fail_1

# WORKFLOWS
workflows:
  braintrust-evals:
    when: << pipeline.parameters.run-braintrust-evals >>
    jobs:
      - run-braintrust-evals:
          context:
            - ai-llm-eval-examples # Replace this with your context name
            - slack-notification-access-token # Replace this with your context name where SLACK_ACCESS_TOKEN is stored
  langsmith-evals:
    when: << pipeline.parameters.run-langsmith-evals >>
    jobs:
      - run-langsmith-evals:
          context:
            - ai-llm-eval-examples # Replace this with your context name
            - slack-notification-access-token # Replace this with your context name where SLACK_ACCESS_TOKEN is stored
  custom-evals:
    when: << pipeline.parameters.run-custom-evals >>
    jobs:
      - run-custom-evals:
          context:
            - ai-llm-eval-examples # Replace this with your context name
            - slack-notification-access-token # Replace this with your context name where SLACK_ACCESS_TOKEN is stored

# JOBS
jobs:
  run-braintrust-evals:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install braintrust
            pip install -r ./braintrust/requirements.txt
      - evals/eval:
          circle_pipeline_id: << pipeline.id >>
          eval_platform: braintrust
          cmd: braintrust eval braintrust/eval_tutorial.py
      - notify_fail_slack

  run-langsmith-evals:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install -r ./langsmith/requirements.txt
      - evals/eval:
          circle_pipeline_id: << pipeline.id >>
          cmd: python3 langsmith/eval.py
          eval_platform: langsmith
      - notify_fail_slack

  run-custom-evals:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install -r ./custom-command/requirements.txt
      - run:
          name: Run Tests
          command: |
            mkdir /tmp/test-results
            cd ./custom-command
            pytest --html=/tmp/test-results/report.html
      - evals/eval:
          circle_pipeline_id: << pipeline.id >>
          cmd: echo "hello world"
          evals_result_location: /tmp/test-results/report.html
